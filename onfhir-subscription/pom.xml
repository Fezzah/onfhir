<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>fhir-repository</artifactId>
        <groupId>onfhir</groupId>
        <version>3.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>onfhir-subscription</artifactId>
    <packaging>jar</packaging>

    <properties>
        <akka.version>2.6.8</akka.version>
        <alpakka-kafka.version>2.0.4</alpakka-kafka.version>
        <akka-http.version>10.2.0</akka-http.version>
        <scala-test.version>3.2.2</scala-test.version>
    </properties>
    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <!--testSourceDirectory>src/test/scala</testSourceDirectory-->
        <plugins>
            <!-- Allows compiling/testing/running/documenting Scala code in Maven. -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>
            <!-- Generates an executable jar with Maven, containing all dependencies. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <!--Generate standalone jar -->
            <plugin>
                <groupId>com.jolira</groupId>
                <artifactId>onejar-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <filename>onfhir-subscription-standalone.jar</filename>
                            <mainClass>io.onfhir.subscription.Boot</mainClass>
                            <attachToBuild>true</attachToBuild>
                        </configuration>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <!-- Scala Language -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>
        <dependency>
            <groupId>onfhir</groupId>
            <artifactId>onfhir-common</artifactId>
        </dependency>

        <!-- Akka Cluster -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-cluster-typed_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-cluster-sharding-typed_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-cluster-sharding_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-persistence_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>

        <!--Akka actor and stream-->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor-typed_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream-typed_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <!-- Akka Kafka Stream and Cluster sharding -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream-kafka_${scala.binary.version}</artifactId>
            <version>${alpakka-kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream-kafka-cluster-sharding_${scala.binary.version}</artifactId>
            <version>${alpakka-kafka.version}</version>
        </dependency>
        <!-- Akka classic actor and stream (Required for alpakka)-->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <!-- Akka Http for Web Socket -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http_${scala.binary.version}</artifactId>
            <version>${akka-http.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-spray-json_${scala.binary.version}</artifactId>
            <version>${akka-http.version}</version>
        </dependency>
        <!--Serialization-->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.13.0</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-serialization-jackson_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>

        <!--Testing -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>${scala-test.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>